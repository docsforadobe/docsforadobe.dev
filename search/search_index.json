{"config": {"lang": ["en"], "separator": "[\\s\\-,\\.:!=\\[\\]()\"/]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "Adobe CC Extensibility Directory", "text": "<p>Quick links to a variety of extensibility resources.</p> <p>Info</p> <p>External resources, marked with the \u29c9 symbol, are outside the control of this domain.</p> <p>docsforadobe and the docsforadobe.dev community community are not and do not claim to be legally affiliated with Adobe.</p> <p>All pages hosted on this domain exist for educational purposes only, are independently owned, and rely on community support and management.</p> <p>Adobe is either a registered trademark or trademark of Adobe Systems Incorporated in the United States and/or other countries.</p> <p>Questions, comments, concerns? Email us!</p>"}, {"location": "contributing/contribution-guide/", "title": "Contribution Guide", "text": "<p>This endeavour is primarily community-supported &amp; run; contributors are welcome and encouraged to suggest fixes, adjustments, notes/warnings, and anything else that may help the project.</p> <p>This project is written in Markdown, styled &amp; served using mkdocs.</p>"}, {"location": "contributing/contribution-guide/#build-html-locally", "title": "Build HTML Locally", "text": "<p>Before pushing to the online project (or submitting a PR), we ask that you develop &amp; test the project locally to ensure the result is what you'd expect.</p> <p>To build locally:</p> <ul> <li>Install python &amp; pip</li> <li>From a terminal, navigate to the project directory and run the following command to install dependencies: <pre><code>pip install -r requirements.txt\n</code></pre></li> <li>When done, run the following command to serve the docs: <pre><code>mkdocs serve\n</code></pre></li> <li>Open your browser to the provided url (<code>http://127.0.0.1:8000</code>) by default to view the live-updating docs</li> </ul>"}, {"location": "contributing/contribution-guide/#admonitions-usage", "title": "Admonitions Usage", "text": "<p>Currently, the following admonitions are in use in this project. Try to keep one piece of data per note, for easier parsing.</p> <pre><code>!!! note\n    Notes detail version added, and/or relevant pieces of information.\n\n!!! tip\n    Tips detail version added, and/or relevant pieces of information.\n\n!!! warning\n    Warnings convey negative behaviours, or when something won't work the way you'd expect.\n</code></pre> <p>These will render as:</p> <p>Note</p> <p>Notes detail version added, and/or relevant pieces of information.</p> <p>Tip</p> <p>Tips detail version added, and/or relevant pieces of information.</p> <p>Warning</p> <p>Warnings convey negative behaviours, or when something won't work the way you'd expect.</p>"}, {"location": "contributing/contribution-guide/#adding-undocumented-attributes-or-methods", "title": "Adding undocumented attributes or methods", "text": "<p>If you find attributes or methods that are not mentioned in this documentation, and they are not publically announced by Adobe, please add this warning to attribute/method so the user knows to use it at their own risk.</p> <pre><code>!!! warning\n    This method/property is officially undocumented and was found via research. The information here may be inaccurate, and this whole method/property may disappear or stop working some point. Please contribute if you have more information on it!\n</code></pre> <p>Rendered as:</p> <p>Warning</p> <p>This method/property is officially undocumented and was found via research. The information here may be inaccurate, and this whole method/property may disappear or stop working some point. Please contribute if you have more information on it!</p>"}, {"location": "contributing/contribution-guide/#licensing-ownership", "title": "Licensing &amp; Ownership", "text": "<p>This project exists for educational purposes only.</p> <p>All content is copyright Adobe Systems Incorporated.</p>"}, {"location": "updating-legacy-docs/conversion-progress/", "title": "Conversion Progress", "text": "<p>This document outlines the current status of converting the existing docs.</p> <ul> <li> Main docsforadobe.dev site</li> <li> AE C++ SDK</li> <li> AE Expression Reference</li> <li> AE Scripting Guide</li> <li> AI Scripting Guide</li> <li> AME Scripting Guide<ul> <li>In progress</li> </ul> </li> <li> Animate Scripting Guide<ul> <li>In progress</li> </ul> </li> <li> ESTK</li> <li> PPro C++ SDK</li> <li> PPro Scripting Guide</li> </ul>"}, {"location": "updating-legacy-docs/converting-rst-to-md/", "title": ".rst -&gt; MD Conversion Process", "text": "<ul> <li>This is a one-time conversion process; it requires changing the Sphinx build system, building as markdown, replacing all the older rst files with the new markdown files, and then going through and cleaning up by hand.</li> <li>It is tedious, but the bulk of the work is cleaning vs actual conversion\u2013 and we can leverage the existing Sphinx setup.</li> <li>This relies on the sphinx_markdown_builder Sphinx plugin.</li> </ul> <p>Tip</p> <p>It is highly recommended to do this work in a child branch of the repo, vs working directly in main. This will be extremely destructive.</p> <p>This works in several main phases:</p> <ol> <li>Setup \u2013 installing required systems for the automated conversion</li> <li>Convert \u2013 running these systems to convert the .rst docs to .md</li> <li>Initialize Mkdocs \u2013 set up the new system that will serve the files</li> <li>Text Cleanup \u2013 all of the work to turn the converted docs to a final product</li> <li>Project Cleanup \u2013 removing the legacy build system files</li> <li>Deploy</li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#1-setup", "title": "1. Setup", "text": "<p>First, all work should be done in a new branch. Historically, these have been named <code>change/mkdocs</code>.</p> <p>Once the work is done, submit a PR to merge it into the main branch.</p>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#setting-up-rst-md-conversion", "title": "Setting up RST -&gt; MD Conversion", "text": "<ol> <li>Install <code>sphinx</code> &amp; <code>sphinx_markdown_builder</code> (for converting from .rst to .md):     <pre><code>pip install sphinx sphinx_markdown_builder\n</code></pre></li> <li>Update Sphinx config to convert to Markdown<ul> <li>Navigate to <code>./docs/conf.py</code></li> <li>Replace all of the contents with only this: <code>extensions = [\"sphinx_markdown_builder\"]</code></li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#setting-up-the-new-system", "title": "Setting up the new system", "text": "<ol> <li>Replace all contents of <code>./requirements.txt</code> with the following list of dependencies:     <pre><code>mkdocs\nmkdocs-material\nmkdocs-git-revision-date-localized-plugin\nmkdocs-print-site-plugin\n</code></pre></li> <li>Install the above requirements via <code>pip</code>:     <pre><code>pip install -r requirements.txt\n</code></pre></li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#2-convert", "title": "2. Convert", "text": "<ol> <li>Run the sphinx command to convert the docs     <pre><code>sphinx-build -M markdown ./docs ./build\n</code></pre></li> <li>For simplicity, we're going to merge these files from <code>./build/markdown</code>/ straight into <code>./docs/</code>, so that all of each subfolder's .rst files sit alongside their .md files</li> <li>Move all files from <code>./build/markdown/</code> into <code>./docs/</code></li> <li>Delete the <code>./build/</code> folder, as it won't be needed</li> <li>Rename <code>./docs/index.md</code> to <code>./docs/_nav.md</code></li> <li>This is a temporary process that we'll resolve later</li> <li>It needs to be rewritten in a different format, and moved into <code>./mkdocs.yml</code>, with this file deleted</li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#3-initialize-mkdocs", "title": "3. Initialize Mkdocs", "text": "<p>Instead of initializing Mkdocs from scratch, we're going to just copy files over from the After Effects Scripting Guide and tweak those to fit.</p> <ol> <li>Copy the following files from the above guide into this repo, overwriting if existing:<ul> <li><code>./.github/</code></li> <li><code>./docs/CNAME</code></li> <li><code>./docs/index.md</code></li> <li><code>./overrides/</code></li> <li><code>./.editorconfig</code></li> <li><code>./.gitignore</code></li> <li><code>./.mkdocs.yml</code></li> </ul> </li> <li>Update anything related to \"After Effects Scripting Guide\" and make it relevant for this repo<ul> <li><code>./docs/index.md</code></li> <li><code>./.mkdocs.yml</code></li> </ul> </li> <li>Open a terminal to the root folder, and run the below command to serve the docs     <pre><code>mkdocs serve\n</code></pre></li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#4-text-cleanup", "title": "4. Text Cleanup", "text": ""}, {"location": "updating-legacy-docs/converting-rst-to-md/#bulk-cleanup", "title": "Bulk Cleanup", "text": ""}, {"location": "updating-legacy-docs/converting-rst-to-md/#search-replace-steps", "title": "Search &amp; Replace Steps", "text": "<ol> <li>Remove generated <code>&lt;a&gt;</code> links<ul> <li>Using regex, search for <code>&lt;a id=\".+\"&gt;&lt;/a&gt;(\\n|\\r)(\\n|\\r)</code> and replace with blank</li> </ul> </li> <li>Update notes, warnings, tips admonitions<ul> <li>Valid admonitions can be found here</li> <li>Using regex, search for <code>#### NOTE\\n(.+)</code> and replace with <code>!!! note\\n    $1</code></li> <li>Using regex, search for <code>#### WARNING\\n(.+)</code> and replace with <code>!!! warning\\n    $1</code></li> <li>Using regex, search for <code>#### TIP\\n(.+)</code> and replace with <code>!!! tip\\n    $1</code></li> </ul> </li> <li>Update case-sensitive syntax highlighting languages<ul> <li>Using regex, search for <code>```AppleScript</code> and replace with <code>```applescript</code></li> </ul> </li> <li>Replace nonstandard<ul> <li>Using regex, search for <code>\u201c|\u201d</code> and replace with <code>\"</code></li> <li>Using regex, search for <code>\u2018|\u2019</code> and replace with <code>'</code></li> <li>Using regex, search for <code>\u2013</code> and replace with <code>-</code></li> </ul> </li> <li>Update offset sublist settings<ul> <li>Using regex, search for<code>(\\n|\\r)  : -</code> and replace with <code>:\\n    -</code> \u2013 only seems to be an issue with changelog</li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#look-for-lingering-bulk-conversion-issues", "title": "Look for lingering bulk-conversion issues", "text": "<ol> <li>Search for lines starting with <code>: -</code> and</li> <li>Search for rst-specific syntax such as the below, and fix them as needed<ul> <li><code>.. note::</code></li> <li><code>::</code></li> <li><code>:ref:</code></li> <li><code>.. WARNING::</code></li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#manual-cleanup", "title": "Manual Cleanup", "text": ""}, {"location": "updating-legacy-docs/converting-rst-to-md/#sidebar-navigation", "title": "Sidebar / Navigation", "text": "<p>The sidebar / navigation needs to be present inside of <code>./mkdocs.yml</code>, formatted identically to how it's presented in the After Effects Scripting Guide repo.</p> <p>Earlier, we set aside <code>./docs/_nav.md</code> as a reference point. Now, use that file as the basis for how to display the nav within the <code>nav</code> section within <code>./mkdocs.yml</code>.</p> <p>When finished, delete <code>./docs/_nav.md</code>.</p>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#links", "title": "Links", "text": "<ol> <li>Search for hyphenated cross-links and replace with plain slugs, i.e.<ul> <li><code>[CharacterRange.pasteFrom()](../text/characterrange.md#characterrange-pastefrom)</code> to</li> <li><code>[CharacterRange.pasteFrom()](../text/characterrange.md#characterrangepastefrom)</code></li> <li>This regex search can help, but fails when the link is also a header (see changelog):</li> <li><code>(?:#)(.*?)-(.*?)(?:\\))</code> =&gt; <code>#$1$2)</code></li> </ul> </li> <li>Search for anchored links to the top-level page &amp; replace with direct page link, i.e.<ul> <li><code>[Settings object](../other/settings.md#settings)</code> to</li> <li><code>[Settings object](../other/settings.md)</code></li> <li>This regex search / replace can help:</li> <li><code>(.*)\\.md#(\\1)\\)</code> =&gt; <code>$1.md)</code></li> </ul> </li> <li>Search for empty in-page links and replace them with the proper format, i.e.<ul> <li><code>[app.watchFolder()]()</code> to</li> <li><code>[app.watchFolder()](#appwatchfolder)</code></li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#update-tables", "title": "Update Tables", "text": "<p>In RST, tables didn't need to have header rows. In markdown, they do (should). This, unfortunately, means a lot of work is needed as the conversion method isn't capable of generating table headers.</p> <p>Note</p> <p>We're also going to use this opportunity to add in property types for arguments &amp; parameters, making the docs friendlier to use.</p> <ul> <li>Set up table headers (see below)</li> <li>Remove any html linebreaks (<code>&lt;br&gt;</code>) unless explicitly required \u2013 this is very rare, but sometimes does occur</li> <li>Format tables</li> </ul> <p>Here are the table header formats to use:</p> <p>Function parameters</p> <pre><code>| Parameter | Type | Description |\n| --------- | ---- | ----------- |\n</code></pre> <p>Returned objects</p> <pre><code>| Property | Type | Description |\n| -------- | ---- | ----------- |\n</code></pre>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#titles", "title": "Titles", "text": "<pre><code># Page\n## Category (\"Attributes\", \"Methods\")\n### Attribute/Method Name (\"CharacterRange.characterEnd\")\n#### Info Header (\"Description\", \"Type\", \"Parameters\", \"Returns\")\n</code></pre>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#other", "title": "Other", "text": "<ul> <li>Check that images are properly linked to the root <code>./docs/_static</code> folder</li> <li>Value ranges should be formatted as: <code>`[0.0..10800.0]`</code> (surrounded by backticks, two periods between min and max)</li> </ul>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#5-project-cleanup", "title": "5. Project Cleanup", "text": "<p>Now that we've got a full suite of .md files, we can remove some old cruft:</p> <ul> <li><code>./build/</code></li> <li><code>./docs/**/*.rst</code></li> <li><code>./docs/conf.py</code></li> <li><code>./.readthedocs.yaml</code></li> <li><code>./make.bat</code></li> <li><code>./Makefile</code></li> </ul>"}, {"location": "updating-legacy-docs/converting-rst-to-md/#6-open-a-pr", "title": "6. Open a PR!", "text": "<p>Once the above steps are complete, it's time to open a PR for review!</p> <p>Open a new Pull Request for merging the <code>change/mkdocs</code> branch into the main branch of the repo.</p> <p>Once reviewed &amp; accepted by an org admin, your converted docs will be pushed into main repo and it'll be time for an org admin to Deploy the docs!</p>"}, {"location": "updating-legacy-docs/deploying-the-docs/", "title": "Deploying the Updated Docs", "text": "<p>Tip</p> <p>Note that the following guide is only possible for Org admins. If you're stuck at this step, please contact an organization admin to proceed.</p> <p>Once a conversion-branch PR has been approved &amp; merged into the main repo, it's time to deploy the new docs.</p> <p>Once the PR has been merged in, the automated build process (from <code>.\\github\\workflows\\ci.yml</code>) should run, generating a new branch <code>gh-pages</code>. This is the branch we'll use to generate the hosted page via Github Pages.</p>"}, {"location": "updating-legacy-docs/deploying-the-docs/#changes-in-the-repo", "title": "Changes in the Repo", "text": "<ol> <li>Update the <code>./docs/CNAME</code> file to reflect the new custom domain (ie <code>ae-scripting.docsforadobe.dev</code> -&gt; <code>ai-scripting.docsforadobe.dev</code>) &amp; ensure this change is committed &amp; pushed<ul> <li>If this isn't committed to the main branch, then every push to the repo (and CI action) will remove this file and lose the custom domain. See this gh-pages issue.</li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/deploying-the-docs/#changes-on-github", "title": "Changes on Github", "text": "<ol> <li>From the Github repo, set up Pages &amp; have it use this new branch.<ul> <li><code>Settings</code> &gt; <code>Pages</code> &gt; Enable Pages</li> <li><code>Deploy from a Branch</code> &gt; Choose the named branch above</li> <li>For folder, choose \"/ (root)\"</li> </ul> </li> <li>Set up the custom domain (<code>xx.docsforadobe.dev</code>)<ul> <li>This may already be defined by the above CNAME file, but check here just in case.</li> <li>Enable \"Enforce HTTPs\"</li> </ul> </li> </ol>"}, {"location": "updating-legacy-docs/deploying-the-docs/#changes-on-web-host", "title": "Changes on web host", "text": "<ol> <li>In the domain registrar / web host, enable DNS-only hosting for this domain</li> <li>Add a CNAME record pointing to <code>docsforadobe.github.io</code></li> <li>Apply for an SSL cert</li> <li>Remove any readthedocs.io hooks from the Github repo</li> <li>Set up branch permissions to require PRs to the main branch</li> </ol>"}, {"location": "updating-legacy-docs/deploying-the-docs/#changes-in-readthedocsio", "title": "Changes in readthedocs.io", "text": "<ol> <li>Remove the legacy docs from readthedocs.io</li> </ol>"}]}